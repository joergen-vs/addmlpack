using System;
using System.Collections.Generic;
using System.Text;

namespace AddmlPack.Standard.v8_3
{
    using System.Collections.Generic;
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     Koden er generert av et verktøy.
    //     Kjøretidsversjon:4.0.30319.42000
    //
    //     Endringer i denne filen kan føre til feil virkemåte, og vil gå tapt hvis
    //     koden genereres på nytt.
    // </auto-generated>
    //------------------------------------------------------------------------------

    using System.Xml.Serialization;

    // 
    // This source code was auto-generated by xsd, Version=4.8.3928.0.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class addml
    {

        private dataset[] datasetField;

        private string nameField;

        public dataset addDataset(string _name, string archiveType)
        {
            dataset tmp = new dataset();
            tmp.name = _name;

            if (dataset == null)
                dataset = new dataset[] { tmp };
            else
            {
                dataset[] _tmp = new dataset[dataset.Length + 1];
                for (int i = 0; i < dataset.Length; i++)
                    _tmp[i] = dataset[i];
                _tmp[_tmp.Length - 1] = tmp;

                dataset = _tmp;
            }

            if (archiveType.Equals("flatfiles"))
            {
                tmp.flatFiles = new flatFiles();
            }
            else
            {
                tmp.dataObjects = new dataObjects();
            }

            return tmp;
        }

        [XmlAttribute(AttributeName = "schemaLocation", Namespace = "http://www.w3.org/2001/XMLSchema-instance")]
        public string schemaLocation { get { return "http://www.arkivverket.no/standarder/addml AddmlPack.xsd"; } set { } }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dataset")]
        public dataset[] dataset
        {
            get
            {
                return this.datasetField;
            }
            set
            {
                this.datasetField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class dataset
    {

        private string descriptionField;

        private reference referenceField;

        private flatFiles flatFilesField;

        private dataObjects dataObjectsField;

        private string nameField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public reference reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }

        /// <remarks/>
        public flatFiles flatFiles
        {
            get
            {
                return this.flatFilesField;
            }
            set
            {
                this.flatFilesField = value;
            }
        }

        /// <remarks/>
        public dataObjects dataObjects
        {
            get
            {
                return this.dataObjectsField;
            }
            set
            {
                this.dataObjectsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class reference
    {

        private context contextField;

        private content contentField;

        private string nameField;

        /// <remarks/>
        public context context
        {
            get
            {
                return this.contextField;
            }
            set
            {
                this.contextField = value;
            }
        }

        /// <remarks/>
        public content content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class context
    {

        private string descriptionField;

        private additionalElements additionalElementsField;

        private process[] processesField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public additionalElements additionalElements
        {
            get
            {
                return this.additionalElementsField;
            }
            set
            {
                this.additionalElementsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class additionalElements
    {

        private string descriptionField;

        private additionalElement[] additionalElementField;

        private process[] processesField;

        public additionalElement getElement(string value)
        {
            foreach (additionalElement element in additionalElementField)
            {
                if (element.name.Equals(value))
                    return element;
            }
            return null;
        }

        public List<additionalElement> getElements(string value)
        {
            List<additionalElement> r = new List<additionalElement>();
            foreach (additionalElement element in additionalElementField)
            {
                if (element.name.Equals(value))
                    r.Add(element);
            }

            return r;
        }

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("additionalElement")]
        public additionalElement[] additionalElement
        {
            get
            {
                return this.additionalElementField;
            }
            set
            {
                this.additionalElementField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class additionalElement
    {

        private string valueField;

        private property[] propertiesField;

        private additionalElements additionalElementsField;

        private process[] processesField;

        private string nameField;

        private string dataTypeField;

        private string formatField;

        public property addProperty(string _name)
        {
            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name);
            propertiesField = tmp;

            return tmp[properties.Length - 1];
        }
        public property addProperty(string _name, string _value)
        {
            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name, _value);
            propertiesField = tmp;

            return tmp[properties.Length - 1];
        }
        public property addProperty(string _name, string _value, string _datatype)
        {
            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name, _value, _datatype);
            propertiesField = tmp;

            return tmp[propertiesField.Length - 1];
        }

        public bool hasProperty(string _name)
        {
            foreach (property p in propertiesField)
            {
                if (p.name.Equals(_name))
                    return true;
            }
            return false;
        }

        public property getProperty(string _name)
        {
            foreach (property p in propertiesField)
            {
                if (p.name.Equals(_name))
                    return p;
            }
            return null;
        }

        public bool hasElement(string value)
        {
            foreach (additionalElement element in additionalElementsField?.additionalElement)
            {
                if (element.name.Equals(value))
                    return true;
            }
            return false;
        }

        public additionalElement getElement(string value)
        {
            foreach (additionalElement element in additionalElementsField?.additionalElement)
            {
                if (element.name.Equals(value))
                    return element;
            }
            return null;
        }

        public List<additionalElement> getElements(string value)
        {
            List<additionalElement> r = new List<additionalElement>();
            foreach (additionalElement element in additionalElementsField?.additionalElement)
            {
                if (element.name.Equals(value))
                    r.Add(element);
            }

            return r;
        }

        /// <remarks/>
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("property", IsNullable = false)]
        public property[] properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        public additionalElements additionalElements
        {
            get
            {
                return this.additionalElementsField;
            }
            set
            {
                this.additionalElementsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dataType
        {
            get
            {
                return this.dataTypeField;
            }
            set
            {
                this.dataTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string format
        {
            get
            {
                return this.formatField;
            }
            set
            {
                this.formatField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class property
    {

        private string valueField;

        private property[] propertiesField;

        private string nameField;

        private string dataTypeField;

        private string formatField;

        public property() { }

        public property(string _name)
        {
            this.name = _name;
        }

        public property(string _name, string _value)
        {
            this.name = _name;
            this.value = _value;
        }

        public property(string _name, string _value, string _datatype)
        {
            this.name = _name;
            this.value = _value;
            this.dataType = _datatype;
        }

        public property addProperty(string _name)
        {
            if (propertiesField == null)
                propertiesField = new property[0];

            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name);
            propertiesField = tmp;

            return tmp[properties.Length - 1];
        }
        public property addProperty(string _name, string _value)
        {
            if (propertiesField == null)
                propertiesField = new property[0];

            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name, _value);
            propertiesField = tmp;

            return tmp[properties.Length - 1];
        }
        public property addProperty(string _name, string _value, string _datatype)
        {
            if (propertiesField == null)
                propertiesField = new property[0];

            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name, _value, _datatype);
            propertiesField = tmp;

            return tmp[propertiesField.Length - 1];
        }

        public property getProperty(string _name)
        {
            if (propertiesField == null)
                return null;

            for (int i = 0; i < propertiesField.Length; i++)
                if (propertiesField[i].name.Equals(_name))
                    return propertiesField[i];

            return null;
        }

        public List<property> getProperties(string _name, bool recursive)
        {
            if (propertiesField == null)
                return null;

            List<property> list = new List<property>();
            for (int i = 0; i < propertiesField.Length; i++)
                if (propertiesField[i].name.Equals(_name))
                    list.Add(propertiesField[i]);
                else if (recursive && propertiesField[i].properties != null)
                {
                    list.AddRange(propertiesField[i].getProperties(_name, recursive));
                }

            return list;
        }

        /// <remarks/>
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("property", IsNullable = false)]
        public property[] properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dataType
        {
            get
            {
                return this.dataTypeField;
            }
            set
            {
                this.dataTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string format
        {
            get
            {
                return this.formatField;
            }
            set
            {
                this.formatField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class process
    {

        private parameter[] parametersField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("parameter", IsNullable = false)]
        public parameter[] parameters
        {
            get
            {
                return this.parametersField;
            }
            set
            {
                this.parametersField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class parameter
    {

        private string nameField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class content
    {

        private string descriptionField;

        private additionalElements additionalElementsField;

        private process[] processesField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public additionalElements additionalElements
        {
            get
            {
                return this.additionalElementsField;
            }
            set
            {
                this.additionalElementsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFiles
    {

        private flatFile[] flatFileField;

        private flatFileDefinition[] flatFileDefinitionsField;

        private structureTypes structureTypesField;

        private query[] queriesField;

        private process[] processesField;

        private flatFileProcesses[] flatFileProcessesField;

        public flatFile addFlatFile(string _name, string _nameOfDefinition)
        {
            if (this.flatFileField == null)
            {
                this.flatFileField = new flatFile[0];
                this.flatFileDefinitions = new flatFileDefinition[0];
                this.structureTypes = new structureTypes();
            }

            flatFile[] tmp = new flatFile[flatFile.Length + 1];

            for (int i = 0; i < flatFile.Length; i++)
                tmp[i] = flatFile[i];

            tmp[flatFile.Length] = new flatFile();
            tmp[flatFile.Length].name = _name;
            tmp[flatFile.Length].definitionReference = _nameOfDefinition;

            this.flatFile = tmp;

            return this.flatFile[flatFile.Length - 1];
        }

        public flatFileDefinition addFlatFileDefinition(string _name, string _nameOfType)
        {
            flatFileDefinition[] tmp = new flatFileDefinition[flatFileDefinitions.Length + 1];

            for (int i = 0; i < flatFileDefinitions.Length; i++)
                tmp[i] = flatFileDefinitions[i];

            tmp[flatFileDefinitions.Length] = new flatFileDefinition();
            tmp[flatFileDefinitions.Length].name = _name;
            tmp[flatFileDefinitions.Length].typeReference = _nameOfType;

            this.flatFileDefinitions = tmp;

            return this.flatFileDefinitions[flatFileDefinitions.Length - 1];
        }

        public flatFileDefinition getFlatFileDefinition(string _definitionReference)
        {
            for (int i = 0; i < flatFileDefinitions.Length; i++)
            {
                if (flatFileDefinitions[i].name.Equals(_definitionReference))
                    return flatFileDefinitions[i];
            }

            return null;
        }

        public flatFileType addFlatFileType(string _name)
        {
            return this.structureTypes.addFlatFileType(_name);
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flatFile")]
        public flatFile[] flatFile
        {
            get
            {
                return this.flatFileField;
            }
            set
            {
                this.flatFileField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("flatFileDefinition", IsNullable = false)]
        public flatFileDefinition[] flatFileDefinitions
        {
            get
            {
                return this.flatFileDefinitionsField;
            }
            set
            {
                this.flatFileDefinitionsField = value;
            }
        }

        /// <remarks/>
        public structureTypes structureTypes
        {
            get
            {
                return this.structureTypesField;
            }
            set
            {
                this.structureTypesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("query", IsNullable = false)]
        public query[] queries
        {
            get
            {
                return this.queriesField;
            }
            set
            {
                this.queriesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flatFileProcesses")]
        public flatFileProcesses[] flatFileProcesses
        {
            get
            {
                return this.flatFileProcessesField;
            }
            set
            {
                this.flatFileProcessesField = value;
            }
        }

        public process addProcess(string name)
        {
            process _process = new process();
            _process.name = name;

            if (processes == null)
            {
                processes = new process[]
                {
                    _process
                };
            }
            else
            {
                foreach (process process in processes)
                {
                    if (process.name.Equals(name))
                        return process;
                }

                process[] tmp = new process[processes.Length + 1];

                for (int i = 0; i < processes.Length; i++)
                    tmp[i] = processes[i];

                this.processes = tmp;
            }

            return (processes[processes.Length - 1] = _process);
        }

        public flatFileProcesses addFlatFileProcesses(string flatFileReference)
        {
            flatFileProcesses _flatFileProcesses = new flatFileProcesses();
            _flatFileProcesses.flatFileReference = flatFileReference;

            if (flatFileProcesses == null)
            {
                flatFileProcesses = new flatFileProcesses[]
                {
                    _flatFileProcesses
                };
            }
            else
            {
                foreach (flatFileProcesses flatFileProcesses in flatFileProcesses)
                {
                    if (flatFileProcesses.flatFileReference.Equals(flatFileReference))
                        return flatFileProcesses;
                }

                flatFileProcesses[] tmp = new flatFileProcesses[flatFileProcesses.Length + 1];

                for (int i = 0; i < flatFileProcesses.Length; i++)
                    tmp[i] = flatFileProcesses[i];

                this.flatFileProcesses = tmp;
            }

            return (flatFileProcesses[flatFileProcesses.Length - 1] = _flatFileProcesses);
        }

        public flatFileProcesses getFlatFileProcesses(string flatFileReference)
        {
            List<flatFileProcesses> list = new List<flatFileProcesses>();
            foreach (flatFileProcesses _flatFileProcesses in flatFileProcesses)
            {
                if (_flatFileProcesses.flatFileReference.Equals(flatFileReference))
                    return _flatFileProcesses;
            }
            return null;
        }

        public void remFlatFileProcesses(string flatFileReference)
        {
            List<flatFileProcesses> list = new List<flatFileProcesses>();
            foreach (flatFileProcesses _flatFileProcesses in flatFileProcesses)
            {
                if (!_flatFileProcesses.flatFileReference.Equals(flatFileReference))
                    list.Add(_flatFileProcesses);
            }
            flatFileProcesses = list.ToArray();
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFile
    {

        private property[] propertiesField;

        private string nameField;

        private string definitionReferenceField;

        public property addProperty(string _name)
        {
            if (propertiesField == null)
                propertiesField = new property[0];

            property _tmp = null;
            if ((_tmp = getProperty(_name)) != null)
                return _tmp;

            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name);
            propertiesField = tmp;

            return tmp[properties.Length - 1];
        }
        public property addProperty(string _name, string _value)
        {
            if (propertiesField == null)
                propertiesField = new property[0];

            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name, _value);
            propertiesField = tmp;

            return tmp[properties.Length - 1];
        }
        public property addProperty(string _name, string _value, string _datatype)
        {
            if (propertiesField == null)
                propertiesField = new property[0];

            property[] tmp = new property[propertiesField.Length + 1];
            for (int i = 0; i < propertiesField.Length; i++)
                tmp[i] = propertiesField[i];
            tmp[propertiesField.Length] = new property(_name, _value, _datatype);
            propertiesField = tmp;

            return tmp[propertiesField.Length - 1];
        }

        public property getProperty(string _name)
        {
            if (propertiesField == null)
                return null;

            for (int i = 0; i < propertiesField.Length; i++)
                if (propertiesField[i].name.Equals(_name))
                    return propertiesField[i];

            return null;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("property", IsNullable = false)]
        public property[] properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string definitionReference
        {
            get
            {
                return this.definitionReferenceField;
            }
            set
            {
                this.definitionReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFileDefinition
    {

        private string descriptionField;

        private property[] propertiesField;

        private external externalField;

        private string recordDefinitionFieldIdentifierField;

        private recordDefinition[] recordDefinitionsField;

        private string nameField;

        private string typeReferenceField;

        public recordDefinition addRecordDefinition(string _name, string _nameOfType)
        {
            if (recordDefinitions == null)
            {
                recordDefinitions = new recordDefinition[] { new recordDefinition() };
                recordDefinitions[recordDefinitions.Length - 1].name = _name;
                recordDefinitions[recordDefinitions.Length - 1].typeReference = _nameOfType;
            }
            else
            {
                recordDefinition[] tmp = new recordDefinition[recordDefinitions.Length + 1];

                for (int i = 0; i < recordDefinitions.Length; i++)
                    tmp[i] = recordDefinitions[i];

                tmp[recordDefinitions.Length] = new recordDefinition();
                tmp[recordDefinitions.Length].name = _name;
                tmp[recordDefinitions.Length].typeReference = _nameOfType;

                this.recordDefinitions = tmp;
            }

            return this.recordDefinitions[recordDefinitions.Length - 1];
        }

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("property", IsNullable = false)]
        public property[] properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        public external external
        {
            get
            {
                return this.externalField;
            }
            set
            {
                this.externalField = value;
            }
        }

        /// <remarks/>
        public string recordDefinitionFieldIdentifier
        {
            get
            {
                return this.recordDefinitionFieldIdentifierField;
            }
            set
            {
                this.recordDefinitionFieldIdentifierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recordDefinition", IsNullable = false)]
        public recordDefinition[] recordDefinitions
        {
            get
            {
                return this.recordDefinitionsField;
            }
            set
            {
                this.recordDefinitionsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string typeReference
        {
            get
            {
                return this.typeReferenceField;
            }
            set
            {
                this.typeReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class external
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class recordDefinition
    {

        private string descriptionField;

        private property[] propertiesField;

        private string recordDefinitionFieldValueField;

        private incomplete incompleteField;

        private string fixedLengthField;

        private repeatingGroup[] repeatingGroupsField;

        private key[] keysField;

        private fieldDefinition[] fieldDefinitionsField;

        private string headerLevelField;

        private string nameField;

        private string typeReferenceField;

        public fieldDefinition addFieldDefinition(string _name, string _nameOfType)
        {
            if (fieldDefinitions == null)
            {
                fieldDefinitions = new fieldDefinition[] { new fieldDefinition() };
                fieldDefinitions[fieldDefinitions.Length - 1].name = _name;
                fieldDefinitions[fieldDefinitions.Length - 1].typeReference = _nameOfType;
            }
            else
            {
                fieldDefinition[] tmp = new fieldDefinition[fieldDefinitions.Length + 1];

                for (int i = 0; i < fieldDefinitions.Length; i++)
                    tmp[i] = fieldDefinitions[i];

                tmp[fieldDefinitions.Length] = new fieldDefinition();
                tmp[fieldDefinitions.Length].name = _name;
                tmp[fieldDefinitions.Length].typeReference = _nameOfType;

                this.fieldDefinitions = tmp;
            }

            return this.fieldDefinitions[fieldDefinitions.Length - 1];
        }

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("property", IsNullable = false)]
        public property[] properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        public string recordDefinitionFieldValue
        {
            get
            {
                return this.recordDefinitionFieldValueField;
            }
            set
            {
                this.recordDefinitionFieldValueField = value;
            }
        }

        /// <remarks/>
        public incomplete incomplete
        {
            get
            {
                return this.incompleteField;
            }
            set
            {
                this.incompleteField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "nonNegativeInteger")]
        public string fixedLength
        {
            get
            {
                return this.fixedLengthField;
            }
            set
            {
                this.fixedLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("repeatingGroup", IsNullable = false)]
        public repeatingGroup[] repeatingGroups
        {
            get
            {
                return this.repeatingGroupsField;
            }
            set
            {
                this.repeatingGroupsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("key", IsNullable = false)]
        public key[] keys
        {
            get
            {
                return this.keysField;
            }
            set
            {
                this.keysField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("fieldDefinition", IsNullable = false)]
        public fieldDefinition[] fieldDefinitions
        {
            get
            {
                return this.fieldDefinitionsField;
            }
            set
            {
                this.fieldDefinitionsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "integer")]
        public string headerLevel
        {
            get
            {
                return this.headerLevelField;
            }
            set
            {
                this.headerLevelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string typeReference
        {
            get
            {
                return this.typeReferenceField;
            }
            set
            {
                this.typeReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class incomplete
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class repeatingGroup
    {

        private object itemField;

        private fieldDefinitionReference[] fieldDefinitionReferencesField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fixedOccurrences", typeof(string), DataType = "nonNegativeInteger")]
        [System.Xml.Serialization.XmlElementAttribute("repeatingGroupOccurrenceField", typeof(repeatingGroupOccurrenceField))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("fieldDefinitionReference", IsNullable = false)]
        public fieldDefinitionReference[] fieldDefinitionReferences
        {
            get
            {
                return this.fieldDefinitionReferencesField;
            }
            set
            {
                this.fieldDefinitionReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class repeatingGroupOccurrenceField
    {

        private string definitionReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string definitionReference
        {
            get
            {
                return this.definitionReferenceField;
            }
            set
            {
                this.definitionReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldDefinitionReference
    {

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class key
    {

        private object itemField;

        private fieldDefinitionReference[] fieldDefinitionReferencesField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("alternateKey", typeof(alternateKey))]
        [System.Xml.Serialization.XmlElementAttribute("foreignKey", typeof(foreignKey))]
        [System.Xml.Serialization.XmlElementAttribute("primaryKey", typeof(primaryKey))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("fieldDefinitionReference", IsNullable = false)]
        public fieldDefinitionReference[] fieldDefinitionReferences
        {
            get
            {
                return this.fieldDefinitionReferencesField;
            }
            set
            {
                this.fieldDefinitionReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class alternateKey
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class foreignKey
    {

        private flatFileDefinitionReference flatFileDefinitionReferenceField;

        private string relationTypeField;

        /// <remarks/>
        public flatFileDefinitionReference flatFileDefinitionReference
        {
            get
            {
                return this.flatFileDefinitionReferenceField;
            }
            set
            {
                this.flatFileDefinitionReferenceField = value;
            }
        }

        /// <remarks/>
        public string relationType
        {
            get
            {
                return this.relationTypeField;
            }
            set
            {
                this.relationTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFileDefinitionReference
    {

        private recordDefinitionReference[] recordDefinitionReferencesField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recordDefinitionReference", IsNullable = false)]
        public recordDefinitionReference[] recordDefinitionReferences
        {
            get
            {
                return this.recordDefinitionReferencesField;
            }
            set
            {
                this.recordDefinitionReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class recordDefinitionReference
    {

        private fieldDefinitionReference[] fieldDefinitionReferencesField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("fieldDefinitionReference", IsNullable = false)]
        public fieldDefinitionReference[] fieldDefinitionReferences
        {
            get
            {
                return this.fieldDefinitionReferencesField;
            }
            set
            {
                this.fieldDefinitionReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class primaryKey
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldDefinition
    {

        private string descriptionField;

        private property[] propertiesField;

        private string startPosField;

        private string endPosField;

        private string fixedLengthField;

        private string minLengthField;

        private string maxLengthField;

        private unique uniqueField;

        private notNull notNullField;

        private fieldParts fieldPartsField;

        private code[] codesField;

        private string nameField;

        private string typeReferenceField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("property", IsNullable = false)]
        public property[] properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "nonNegativeInteger")]
        public string startPos
        {
            get
            {
                return this.startPosField;
            }
            set
            {
                this.startPosField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "nonNegativeInteger")]
        public string endPos
        {
            get
            {
                return this.endPosField;
            }
            set
            {
                this.endPosField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "nonNegativeInteger")]
        public string fixedLength
        {
            get
            {
                return this.fixedLengthField;
            }
            set
            {
                this.fixedLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "nonNegativeInteger")]
        public string minLength
        {
            get
            {
                return this.minLengthField;
            }
            set
            {
                this.minLengthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "nonNegativeInteger")]
        public string maxLength
        {
            get
            {
                return this.maxLengthField;
            }
            set
            {
                this.maxLengthField = value;
            }
        }

        /// <remarks/>
        public unique unique
        {
            get
            {
                return this.uniqueField;
            }
            set
            {
                this.uniqueField = value;
            }
        }

        /// <remarks/>
        public notNull notNull
        {
            get
            {
                return this.notNullField;
            }
            set
            {
                this.notNullField = value;
            }
        }

        /// <remarks/>
        public fieldParts fieldParts
        {
            get
            {
                return this.fieldPartsField;
            }
            set
            {
                this.fieldPartsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("code", IsNullable = false)]
        public code[] codes
        {
            get
            {
                return this.codesField;
            }
            set
            {
                this.codesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string typeReference
        {
            get
            {
                return this.typeReferenceField;
            }
            set
            {
                this.typeReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class unique
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class notNull
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldParts
    {

        private fieldDefinition[] fieldDefinitionField;

        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fieldDefinition")]
        public fieldDefinition[] fieldDefinition
        {
            get
            {
                return this.fieldDefinitionField;
            }
            set
            {
                this.fieldDefinitionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class code
    {

        private string codeValueField;

        private string explanField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string codeValue
        {
            get
            {
                return this.codeValueField;
            }
            set
            {
                this.codeValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string explan
        {
            get
            {
                return this.explanField;
            }
            set
            {
                this.explanField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class structureTypes
    {

        private flatFileType[] flatFileTypesField;

        private recordType[] recordTypesField;

        private fieldType[] fieldTypesField;

        public flatFileType addFlatFileType(string _name)
        {
            if (flatFileTypes == null)
            {
                flatFileTypes = new flatFileType[0];
            }

            flatFileType[] tmp = new flatFileType[flatFileTypes.Length + 1];

            for (int i = 0; i < flatFileTypes.Length; i++)
                tmp[i] = flatFileTypes[i];

            tmp[flatFileTypes.Length] = new flatFileType();
            tmp[flatFileTypes.Length].name = _name;

            this.flatFileTypes = tmp;

            return this.flatFileTypes[flatFileTypes.Length - 1];
        }

        public flatFileType getFlatFileType(string _charset, delimFileFormat _dff)
        {
            if (flatFileTypes == null)
                return null;

            for (int i = 0; i < flatFileTypes.Length; i++)
            {
                if (flatFileTypes[i].charset.Equals(_charset) &&
                flatFileTypesField[i].Item.GetType() == typeof(delimFileFormat) &&
                ((delimFileFormat)flatFileTypesField[i].Item).recordSeparator == _dff.recordSeparator &&
                ((delimFileFormat)flatFileTypesField[i].Item).fieldSeparatingChar == _dff.fieldSeparatingChar &&
                ((delimFileFormat)flatFileTypesField[i].Item).quotingChar == _dff.quotingChar
                )
                {
                    return flatFileTypes[i];
                }
            }

            return null;
        }

        public recordType addRecordType(string _name)
        {
            if (recordTypes == null)
            {
                recordTypes = new recordType[] { new recordType() };
                recordTypes[0].name = _name;
            }
            else
            {
                recordType[] tmp = new recordType[recordTypes.Length + 1];

                for (int i = 0; i < recordTypes.Length; i++)
                    tmp[i] = recordTypes[i];

                tmp[recordTypes.Length] = new recordType();
                tmp[recordTypes.Length].name = _name;

                this.recordTypes = tmp;
            }

            return this.recordTypes[recordTypes.Length - 1];
        }

        public fieldType addFieldType(string _name)
        {
            if (fieldTypes == null)
                fieldTypes = new fieldType[0];

            fieldType[] tmp = new fieldType[fieldTypes.Length + 1];

            for (int i = 0; i < fieldTypes.Length; i++)
                tmp[i] = fieldTypes[i];

            tmp[fieldTypes.Length] = new fieldType();
            tmp[fieldTypes.Length].name = _name;

            this.fieldTypes = tmp;

            return this.fieldTypes[fieldTypes.Length - 1];
        }

        public fieldType getFieldType(string name)
        {
            if (fieldTypes == null)
                return null;

            for (int i = 0; i < fieldTypes.Length; i++)
                if (fieldTypes[i].name != null && fieldTypes[i].name.Equals(name))
                    return fieldTypes[i];

            return null;
        }

        public fieldType getFieldType(string description, string fieldformat)
        {
            if (fieldTypes == null)
                return null;

            for (int i = 0; i < fieldTypes.Length; i++)
                if (fieldTypes[i].description != null && fieldTypes[i].description.Equals(description))
                    if
                    (
                        (fieldTypes[i].fieldFormat == null && fieldformat == null) ||
                        (fieldTypes[i].fieldFormat != null && fieldTypes[i].fieldFormat.Equals(fieldformat))
                    )
                        return fieldTypes[i];

            return null;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("flatFileType", IsNullable = false)]
        public flatFileType[] flatFileTypes
        {
            get
            {
                return this.flatFileTypesField;
            }
            set
            {
                this.flatFileTypesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("recordType", IsNullable = false)]
        public recordType[] recordTypes
        {
            get
            {
                return this.recordTypesField;
            }
            set
            {
                this.recordTypesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("fieldType", IsNullable = false)]
        public fieldType[] fieldTypes
        {
            get
            {
                return this.fieldTypesField;
            }
            set
            {
                this.fieldTypesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFileType
    {

        private string descriptionField;

        private string charsetField;

        private charDefinition[] charDefinitionsField;

        private object itemField;

        private string nameField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string charset
        {
            get
            {
                return this.charsetField;
            }
            set
            {
                this.charsetField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("charDefinition", IsNullable = false)]
        public charDefinition[] charDefinitions
        {
            get
            {
                return this.charDefinitionsField;
            }
            set
            {
                this.charDefinitionsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("delimFileFormat", typeof(delimFileFormat))]
        [System.Xml.Serialization.XmlElementAttribute("fixedFileFormat", typeof(fixedFileFormat))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class charDefinition
    {

        private string fromCharField;

        private string toCharField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string fromChar
        {
            get
            {
                return this.fromCharField;
            }
            set
            {
                this.fromCharField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string toChar
        {
            get
            {
                return this.toCharField;
            }
            set
            {
                this.toCharField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class delimFileFormat
    {

        private string recordSeparatorField;

        private string fieldSeparatingCharField;

        private string quotingCharField;

        /// <remarks/>
        public string recordSeparator
        {
            get
            {
                return this.recordSeparatorField;
            }
            set
            {
                this.recordSeparatorField = value;
            }
        }

        /// <remarks/>
        public string fieldSeparatingChar
        {
            get
            {
                return this.fieldSeparatingCharField;
            }
            set
            {
                this.fieldSeparatingCharField = value;
            }
        }

        /// <remarks/>
        public string quotingChar
        {
            get
            {
                return this.quotingCharField;
            }
            set
            {
                this.quotingCharField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fixedFileFormat
    {

        private string recordSeparatorField;

        /// <remarks/>
        public string recordSeparator
        {
            get
            {
                return this.recordSeparatorField;
            }
            set
            {
                this.recordSeparatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class recordType
    {

        private string descriptionField;

        private trimmed trimmedField;

        private string nameField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public trimmed trimmed
        {
            get
            {
                return this.trimmedField;
            }
            set
            {
                this.trimmedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class trimmed
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldType
    {

        private string descriptionField;

        private string dataTypeField;

        private string fieldFormatField;

        private string alignmentField;

        private string padCharField;

        private string packTypeField;

        private string[] nullValuesField;

        private string nameField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string dataType
        {
            get
            {
                return this.dataTypeField;
            }
            set
            {
                this.dataTypeField = value;
            }
        }

        /// <remarks/>
        public string fieldFormat
        {
            get
            {
                return this.fieldFormatField;
            }
            set
            {
                this.fieldFormatField = value;
            }
        }

        /// <remarks/>
        public string alignment
        {
            get
            {
                return this.alignmentField;
            }
            set
            {
                this.alignmentField = value;
            }
        }

        /// <remarks/>
        public string padChar
        {
            get
            {
                return this.padCharField;
            }
            set
            {
                this.padCharField = value;
            }
        }

        /// <remarks/>
        public string packType
        {
            get
            {
                return this.packTypeField;
            }
            set
            {
                this.packTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("nullValue", IsNullable = false)]
        public string[] nullValues
        {
            get
            {
                return this.nullValuesField;
            }
            set
            {
                this.nullValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class query
    {

        private string descriptionField;

        private string statementField;

        private string nameField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string statement
        {
            get
            {
                return this.statementField;
            }
            set
            {
                this.statementField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFileProcesses
    {

        private process[] processesField;

        private recordProcesses[] recordProcessesField;

        private string flatFileReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recordProcesses")]
        public recordProcesses[] recordProcesses
        {
            get
            {
                return this.recordProcessesField;
            }
            set
            {
                this.recordProcessesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string flatFileReference
        {
            get
            {
                return this.flatFileReferenceField;
            }
            set
            {
                this.flatFileReferenceField = value;
            }
        }

        public process addProcess(string name)
        {
            process _process = new process();
            _process.name = name;

            if (processes == null)
            {
                processes = new process[]
                {
                    _process
                };
            }
            else
            {
                foreach (process process in processes)
                {
                    if (process.name.Equals(name))
                        return process;
                }

                process[] tmp = new process[processes.Length + 1];

                for (int i = 0; i < processes.Length; i++)
                    tmp[i] = processes[i];

                this.processes = tmp;
            }

            return (processes[processes.Length - 1] = _process);
        }

        public recordProcesses addRecordProcesses(string definitionReference)
        {
            recordProcesses _recordProcesses = new recordProcesses();
            _recordProcesses.definitionReference = definitionReference;

            if (recordProcesses == null)
            {
                recordProcesses = new recordProcesses[]
                {
                    _recordProcesses
                };
            }
            else
            {
                foreach (recordProcesses recordProcesses in recordProcesses)
                {
                    if (recordProcesses.definitionReference.Equals(definitionReference))
                        return recordProcesses;
                }

                recordProcesses[] tmp = new recordProcesses[recordProcesses.Length + 1];

                for (int i = 0; i < recordProcesses.Length; i++)
                    tmp[i] = recordProcesses[i];

                this.recordProcesses = tmp;
            }

            return (recordProcesses[recordProcesses.Length - 1] = _recordProcesses);
        }

        public recordProcesses getRecordProcesses(string definitionReference)
        {
            List<recordProcesses> list = new List<recordProcesses>();
            foreach (recordProcesses _recordProcesses in recordProcesses)
            {
                if (_recordProcesses.definitionReference.Equals(definitionReference))
                    return _recordProcesses;
            }

            return null;
        }

        public void remRecordProcesses(string definitionReference)
        {
            List<recordProcesses> list = new List<recordProcesses>();
            foreach (recordProcesses _recordProcesses in recordProcesses)
            {
                if (!_recordProcesses.definitionReference.Equals(definitionReference))
                    list.Add(_recordProcesses);
            }
            recordProcesses = list.ToArray();
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class recordProcesses
    {

        private process[] processesField;

        private fieldProcesses[] fieldProcessesField;

        private string definitionReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fieldProcesses")]
        public fieldProcesses[] fieldProcesses
        {
            get
            {
                return this.fieldProcessesField;
            }
            set
            {
                this.fieldProcessesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string definitionReference
        {
            get
            {
                return this.definitionReferenceField;
            }
            set
            {
                this.definitionReferenceField = value;
            }
        }

        public process addProcess(string name)
        {
            process _process = new process();
            _process.name = name;

            if (processes == null)
            {
                processes = new process[]
                {
                    _process
                };
            }
            else
            {
                foreach (process process in processes)
                {
                    if (process.name.Equals(name))
                        return process;
                }

                process[] tmp = new process[processes.Length + 1];

                for (int i = 0; i < processes.Length; i++)
                    tmp[i] = processes[i];

                this.processes = tmp;
            }

            return (processes[processes.Length - 1] = _process);
        }

        public fieldProcesses addFieldProcesses(string definitionReference)
        {
            fieldProcesses _fieldProcesses = new fieldProcesses();
            _fieldProcesses.definitionReference = definitionReference;

            if (fieldProcesses == null)
            {
                fieldProcesses = new fieldProcesses[]
                {
                    _fieldProcesses
                };
            }
            else
            {
                foreach (fieldProcesses fieldProcesses in fieldProcesses)
                {
                    if (fieldProcesses.definitionReference.Equals(definitionReference))
                        return fieldProcesses;
                }

                fieldProcesses[] tmp = new fieldProcesses[fieldProcesses.Length + 1];

                for (int i = 0; i < fieldProcesses.Length; i++)
                    tmp[i] = fieldProcesses[i];

                this.fieldProcesses = tmp;
            }

            return (fieldProcesses[fieldProcesses.Length - 1] = _fieldProcesses);
        }

        public fieldProcesses getFieldProcesses(string definitionReference)
        {
            List<fieldProcesses> list = new List<fieldProcesses>();
            foreach (fieldProcesses _fieldProcesses in fieldProcesses)
            {
                if (_fieldProcesses.definitionReference.Equals(definitionReference))
                    return _fieldProcesses;
            }

            return null;
        }

        public void remFieldProcesses(string definitionReference)
        {
            List<fieldProcesses> list = new List<fieldProcesses>();
            foreach (fieldProcesses _fieldProcesses in fieldProcesses)
            {
                if (!_fieldProcesses.definitionReference.Equals(definitionReference))
                    list.Add(_fieldProcesses);
            }
            fieldProcesses = list.ToArray();
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldProcesses
    {

        private process[] processesField;

        private string definitionReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string definitionReference
        {
            get
            {
                return this.definitionReferenceField;
            }
            set
            {
                this.definitionReferenceField = value;
            }
        }

        public process addProcess(string name)
        {
            process _process = new process();
            _process.name = name;

            if (processes == null)
            {
                processes = new process[]
                {
                    _process
                };
            }
            else
            {
                foreach (process process in processes)
                {
                    if (process.name.Equals(name))
                        return process;
                }

                process[] tmp = new process[processes.Length + 1];

                for (int i = 0; i < processes.Length; i++)
                    tmp[i] = processes[i];

                this.processes = tmp;
            }

            return (processes[processes.Length - 1] = _process);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class dataObjects
    {

        private string descriptionField;

        private dataObject[] dataObjectField;

        private process[] processesField;

        public dataObject getObject(string value)
        {
            foreach (dataObject element in dataObject)
            {
                if (element.name.Equals(value))
                    return element;
            }
            return null;
        }

        public List<dataObject> getObjects(string value)
        {
            List<dataObject> r = new List<dataObject>();
            foreach (dataObject element in dataObject)
            {
                if (element.name.Equals(value))
                    r.Add(element);
            }

            return r;
        }

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dataObject")]
        public dataObject[] dataObject
        {
            get
            {
                return this.dataObjectField;
            }
            set
            {
                this.dataObjectField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class dataObject
    {

        private string descriptionField;

        private property[] propertiesField;

        private dataObjects dataObjectsField;

        private process[] processesField;

        private string nameField;

        /// <remarks/>
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        public property getProperty(string name)
        {
            foreach (property p in properties)
            {
                if (name.Equals(p.name))
                    return p;
            }
            return null;
        }

        public List<property> getProperties(string name)
        {
            List<property> r = new List<property>();
            foreach (property p in properties)
            {
                if (name.Equals(p.name))
                    r.Add(p);
            }
            return r;
        }

        public List<property> getProperties(string _name, bool recursive)
        {
            List<property> list = new List<property>();
            for (int i = 0; i < properties.Length; i++)
                if (properties[i].name.Equals(_name))
                    list.Add(properties[i]);
                else if (recursive)
                {
                    list.AddRange(properties[i].getProperties(_name, recursive));
                }

            return list;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("property", IsNullable = false)]
        public property[] properties
        {
            get
            {
                return this.propertiesField;
            }
            set
            {
                this.propertiesField = value;
            }
        }

        /// <remarks/>
        public dataObjects dataObjects
        {
            get
            {
                return this.dataObjectsField;
            }
            set
            {
                this.dataObjectsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("process", IsNullable = false)]
        public process[] processes
        {
            get
            {
                return this.processesField;
            }
            set
            {
                this.processesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFileDefinitions
    {

        private flatFileDefinition[] flatFileDefinitionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flatFileDefinition")]
        public flatFileDefinition[] flatFileDefinition
        {
            get
            {
                return this.flatFileDefinitionField;
            }
            set
            {
                this.flatFileDefinitionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class recordDefinitions
    {

        private recordDefinition[] recordDefinitionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recordDefinition")]
        public recordDefinition[] recordDefinition
        {
            get
            {
                return this.recordDefinitionField;
            }
            set
            {
                this.recordDefinitionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class repeatingGroups
    {

        private repeatingGroup[] repeatingGroupField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("repeatingGroup")]
        public repeatingGroup[] repeatingGroup
        {
            get
            {
                return this.repeatingGroupField;
            }
            set
            {
                this.repeatingGroupField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class keys
    {

        private key[] keyField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("key")]
        public key[] key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldDefinitions
    {

        private fieldDefinition[] fieldDefinitionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fieldDefinition")]
        public fieldDefinition[] fieldDefinition
        {
            get
            {
                return this.fieldDefinitionField;
            }
            set
            {
                this.fieldDefinitionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class codes
    {

        private code[] codeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("code")]
        public code[] code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class flatFileTypes
    {

        private flatFileType[] flatFileTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flatFileType")]
        public flatFileType[] flatFileType
        {
            get
            {
                return this.flatFileTypeField;
            }
            set
            {
                this.flatFileTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class charDefinitions
    {

        private charDefinition[] charDefinitionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("charDefinition")]
        public charDefinition[] charDefinition
        {
            get
            {
                return this.charDefinitionField;
            }
            set
            {
                this.charDefinitionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class recordTypes
    {

        private recordType[] recordTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recordType")]
        public recordType[] recordType
        {
            get
            {
                return this.recordTypeField;
            }
            set
            {
                this.recordTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldTypes
    {

        private fieldType[] fieldTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fieldType")]
        public fieldType[] fieldType
        {
            get
            {
                return this.fieldTypeField;
            }
            set
            {
                this.fieldTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class nullValues
    {

        private string[] nullValueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nullValue")]
        public string[] nullValue
        {
            get
            {
                return this.nullValueField;
            }
            set
            {
                this.nullValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class queries
    {

        private query[] queryField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("query")]
        public query[] query
        {
            get
            {
                return this.queryField;
            }
            set
            {
                this.queryField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class processes
    {

        private process[] processField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("process")]
        public process[] process
        {
            get
            {
                return this.processField;
            }
            set
            {
                this.processField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class parameters
    {

        private parameter[] parameterField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        public parameter[] parameter
        {
            get
            {
                return this.parameterField;
            }
            set
            {
                this.parameterField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class recordDefinitionReferences
    {

        private recordDefinitionReference[] recordDefinitionReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recordDefinitionReference")]
        public recordDefinitionReference[] recordDefinitionReference
        {
            get
            {
                return this.recordDefinitionReferenceField;
            }
            set
            {
                this.recordDefinitionReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class fieldDefinitionReferences
    {

        private fieldDefinitionReference[] fieldDefinitionReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fieldDefinitionReference")]
        public fieldDefinitionReference[] fieldDefinitionReference
        {
            get
            {
                return this.fieldDefinitionReferenceField;
            }
            set
            {
                this.fieldDefinitionReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.arkivverket.no/standarder/addml")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "http://www.arkivverket.no/standarder/addml", IsNullable = false)]
    public partial class properties
    {

        private property[] propertyField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("property")]
        public property[] property
        {
            get
            {
                return this.propertyField;
            }
            set
            {
                this.propertyField = value;
            }
        }
    }

}
